buildscript {
    project.ext.CERN_VM = System.getProperty('CERN_TECHNET_VM') ?: System.getenv('CERN_TECHNET_VM') ?: false
}

plugins {
    id 'java'
    id 'jacoco'
    id 'idea'
    id 'eclipse'
}

group = 'jmad'

sourceCompatibility = JavaVersion.VERSION_1_8

repositories {
    if (CERN_VM) {
        maven { url 'http://artifactory.cern.ch/ds-jcenter' }
        maven { url 'http://artifactory.cern.ch/development' }
    } else {
        jcenter()
        maven { url "https://dl.bintray.com/jmad/jmad-repo" }
    }
}

dependencies {
    compile group: 'jmad', name: 'jmad-modelpack-service', version: '0.1.0'

    compile group: 'de.jensd', name:'fontawesomefx-fontawesome', version:'4.7.0-5'
    compile group: 'org.controlsfx', name: 'controlsfx', version: '8.40.14'

    compile group: 'org.springframework', name: 'spring-core', version: '5.0.6.RELEASE'
    compile group: 'org.springframework', name: 'spring-context', version: '5.0.6.RELEASE'
    compile group: 'org.springframework', name: 'spring-beans', version: '5.0.6.RELEASE'

    compile group: 'io.projectreactor', name: 'reactor-core', version: '3.1.7.RELEASE'
    compile group: 'com.github.shadskii', name: 'reactorfx', version: '1.8.0'

    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'

    testCompile group: 'org.springframework', name: 'spring-test', version: '5.0.6.RELEASE'
    testCompile group: 'org.assertj', name: 'assertj-core', version: '3.9.1'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.testfx', name: 'testfx-core', version: '4.0.13-alpha'
    testCompile group: 'org.testfx', name: 'testfx-junit', version: '4.0.13-alpha'
    testCompile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.25'
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.7'
}

sourceSets {
    main {
        java { srcDirs = ['src/java'] }
        resources { srcDirs = ['src/java'] }
    }

    test {
        java { srcDirs = ['src/test'] }
        resources { srcDirs = ['src/test'] }
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
        xml.destination file("$buildDir/reports/jacoco/report.xml")
        html.enabled true
        csv.enabled false
    }
}

javadoc { options.encoding = "UTF-8" }

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

eclipse {
    classpath {
        downloadJavadoc = true
        downloadSources = true
    }
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}
